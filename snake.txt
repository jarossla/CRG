import pygame
from pygame.locals import *
import time
import random

SIZE = 40
BACKGROUND_COLOR = (110, 110, 5)


class Apple:
    def __init__(self, parent_screen):
        self.parent_screen = parent_screen
        self.image = pygame.image.load("apple.jpg").convert()
        self.x = 120
        self.y = 120

    def draw(self):
        self.parent_screen.blit(self.image, (self.x, self.y))
        pygame.display.flip()

    def move(self):
        self.x = random.randint(1, 24) * SIZE
        self.y = random.randint(1, 19) * SIZE


class Snake:
    def __init__(self, parent_screen):
        self.parent_screen = parent_screen
        self.image = pygame.image.load("block.jpg").convert()
        self.direction = 'down'
        self.initBody = [[3 * SIZE, 40], [4 * SIZE, 40], [5 * SIZE, 40]]
        self.length = 1
        self.x = [40]
        self.y = [40]

    def move_left(self):
        self.direction = 'left'

    def move_right(self):
        self.direction = 'right'

    def move_up(self):
        self.direction = 'up'

    def move_down(self):
        self.direction = 'down'

    def walk(self):
        for i in range(self.length - 1, 0, -1):
            self.x[i] = self.x[i - 1]
            self.y[i] = self.y[i - 1]

        if self.direction == 'left':
            self.x[0] -= SIZE
        if self.direction == 'right':
            self.x[0] += SIZE
        if self.direction == 'up':
            self.y[0] -= SIZE
        if self.direction == 'down':
            self.y[0] += SIZE

        self.draw()

    def draw(self):
        for i in range(self.length):
            self.parent_screen.blit(self.image, (self.x[i], self.y[i]))

        pygame.display.flip()

    def increase_length(self):
        self.length += 1
        self.x.append(-1)
        self.y.append(-1)


def is_collision(x1, y1, x2, y2):
    if x1 >= x2 and x1 < x2 + SIZE:
        if y1 >= y2 and y1 < y2 + SIZE:
            return True
    return False


class Game:
    def __init__(self):
        pygame.init()
        pygame.display.set_caption("SNAKE GAME")

        pygame.mixer.init()

        self.surface = pygame.display.set_mode((1000, 800))
        self.snake = Snake(self.surface)
        self.snake.draw()
        self.apple = Apple(self.surface)
        self.apple.draw()

    def reset(self):
        self.snake = Snake(self.surface)
        self.apple = Apple(self.surface)

    def render_background(self):
        bg = pygame.image.load("background.jpg")
        self.surface.blit(bg, (0, 0))

    def play(self):
        self.render_background()
        self.snake.walk()
        self.apple.draw()
        self.display_score()
        pygame.display.flip()

        if is_collision(self.snake.x[0], self.snake.y[0], self.apple.x, self.apple.y):
            self.snake.increase_length()
            self.apple.move()

        for i in range(3, self.snake.length):
            if is_collision(self.snake.x[0], self.snake.y[0], self.snake.x[i], self.snake.y[i]):
                raise "Collision Occurred"

    def display_score(self):
        font = pygame.font.SysFont('algerian', 35)
        score = font.render(f"SkÃ³re: {self.snake.length}", True, (255, 10, 20))
        self.surface.blit(score, (830, 10))

    def show_game_over(self):
        self.render_background()
        font = pygame.font.SysFont('times new roman', 40)
        line1 = font.render(f"Prehral si! Tvoje najvyssie skore bolo: {self.snake.length}", True, (0, 0, 255))
        self.surface.blit(line1, (200, 300))
        font = pygame.font.SysFont('times new roman', 20)
        line2 = font.render("Stlac enter pre pokracovanie. ", True, (0, 0, 0))
        self.surface.blit(line2, (380, 350))
        font = pygame.font.SysFont('times new roman', 20)
        line3 = font.render("Stlac eskape pre ukoncenie. ", True, (0, 0, 0))
        self.surface.blit(line3, (380, 370))
        pygame.display.flip()

    def run(self):
        running = True
        pause = False

        while running:
            for event in pygame.event.get():
                if event.type == KEYDOWN:
                    if event.key == K_ESCAPE:
                        running = False

                    if event.key == K_RETURN:
                        pause = False

                    if not pause:
                        if event.key == K_a:
                            self.snake.move_left()

                        if event.key == K_d:
                            self.snake.move_right()

                        if event.key == K_w:
                            self.snake.move_up()

                        if event.key == K_s:
                            self.snake.move_down()

                elif event.type == QUIT:
                    running = False
            try:

                if not pause:
                    self.play()

            except Exception as e:
                self.show_game_over()
                pause = True
                self.reset()

            time.sleep(.25)


if __name__ == '__main__':
    game = Game()
    game.run()
